<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 기본 Spring Boot 설정 포함 (clr, highlight 등 사용 가능하게 해줌) -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />

    <!-- 로그 저장 위치와 패턴 -->
    <property name="LOG_PATH" value="logs" />
    <property name="LOG_PATTERN" value="%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr([%thread]){cyan} %clr(%-5level){yellow} %clr(%logger{36}){blue} - %msg%n" />
    <property name="FILE_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n" />

    <!-- 콘솔 로그 (컬러 출력용) -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 로그 파일: info -->
    <appender name="FILE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/info.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${FILE_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/info-%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- 로그 파일: error -->
    <appender name="FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/error.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>${FILE_PATTERN}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/error-%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- 비동기 처리 -->
    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE-INFO" />
    </appender>

    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE-ERROR" />
    </appender>

    <!-- 개발 환경 (default, development 프로파일) -->
    <springProfile name="default,development">
        <root level="INFO">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="ASYNC-INFO" />
            <appender-ref ref="ASYNC-ERROR" />
        </root>
        <logger name="kr.cocoh" level="DEBUG" />
        <logger name="org.hibernate.SQL" level="DEBUG" />
    </springProfile>

    <!-- 운영 환경 -->
    <springProfile name="production">
        <root level="INFO">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="ASYNC-INFO" />
            <appender-ref ref="ASYNC-ERROR" />
        </root>
    </springProfile>

</configuration>
<!--
    - INFO 레벨 로그는 info.log에 저장되며, 매일 새로운 파일로 롤링됩니다.
    - ERROR 레벨 로그는 error.log에 저장되며, 매일 새로운 파일로 롤링됩니다.
    - INFO 레벨 로그는 비동기적으로 처리되어 성능을 향상시킵니다.
    - 개발 환경에서는 DEBUG 레벨 로그를 출력합니다.
    - 운영 환경에서는 INFO 레벨 로그만 출력합니다.
    - 로그 파일은 logs 디렉토리에 저장됩니다.
    - 로그 파일은 최대 30일 동안 보관됩니다.
    - 콘솔 로그는 컬러로 출력됩니다.
    - 로그 패턴은 %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n 형식입니다.
    - 로그 파일 패턴은 %d{yyyy-MM-dd} 형식입니다.
    - 로그 파일 이름은 info-YYYY-MM-DD.log 또는 error-YYYY-MM-DD.log 형식입니다.
-->